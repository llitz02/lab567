@page "/borrow"
@inject Fuck.Services.LibraryService LibraryService
@using Fuck.Models
@using System.Linq

<h2 class="text-xl font-bold mb-4">Borrow a Book</h2>

@if (!LibraryService.Users.Any() || !LibraryService.Books.Any())
{
    <p class="text-red-600">Make sure both users and books exist before borrowing.</p>
}
else
{
 <EditForm Model="@borrowInfo" OnValidSubmit="HandleBorrow" FormName="borrowForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-4">
            <label class="block mb-1 font-medium">Select User:</label>
            <select class="border w-full p-2" @bind="borrowInfo.UserId">
                <option disabled selected value="">-- Choose a user --</option>
                @foreach (var user in LibraryService.Users)
                {
                    <option value="@user.Id">@user.Name (@user.Email)</option>
                }
            </select>
        </div>

        <div class="mb-4">
            <label class="block mb-1 font-medium">Select Book:</label>
            <select class="border w-full p-2" @bind="borrowInfo.BookId">
                <option disabled selected value="">-- Choose a book --</option>
                @foreach (var book in LibraryService.Books.Where(b => b.IsBorrowed == null))

                {
                    <option value="@book.Id">@book.Title by @book.Author</option>
                }
            </select>
        </div>

        <button class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700" type="submit">Borrow Book</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(message))
    {
        <p class="mt-4 text-green-600">@message</p>
    }
}

@code {
    protected BorrowInfo borrowInfo { get; set; } = new BorrowInfo();
    private string message;

    private void HandleBorrow()
    {
        var success = LibraryService.BorrowBook(borrowInfo.UserId, borrowInfo.BookId);
        if (success)
        {
            message = "Book successfully borrowed!";
        }
        else
        {
            message = "Unable to borrow the book. It may already be borrowed.";
        }
    }

    public class BorrowInfo
    {
        public int UserId { get; set; }
        public int BookId { get; set; }
    }
}

